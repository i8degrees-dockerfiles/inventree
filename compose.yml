# compose.yml:jeff
#
# Docker compose setup for InvenTree
#
---

networks:
  traefik-proxy:
    attachable: true
    external: true
    driver: overlay

services:
  # redis acts as database cache manager
  inventree-cache:
    image: redis:7.0
    container_name: inventree-cache
    expose:
      - ${INVENTREE_CACHE_PORT:-6379}
    restart: always
    networks:
      - traefik-proxy

  # Database service
  # Use PostgreSQL as the database backend
  inventree-db:
    image: postgres:13
    container_name: inventree-db
    expose:
      - ${INVENTREE_DB_PORT:-5432}/tcp
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdb
      - POSTGRES_USER=${INVENTREE_DB_USER:?You must provide the 'INVENTREE_DB_USER' variable in the .env file}
      - POSTGRES_PASSWORD=${INVENTREE_DB_PASSWORD:?You must provide the 'INVENTREE_DB_PASSWORD' variable in the .env file}
      - POSTGRES_DB=${INVENTREE_DB_NAME:?You must provide the 'INVENTREE_DB_NAME' variable in the .env file}
    volumes:
      # Map 'data' volume such that postgres database is stored externally
      - ${INVENTREE_EXT_VOLUME:?You must specify the 'INVENTREE_EXT_VOLUME' variable in the .env file!}:/var/lib/postgresql/data/:z
    restart: unless-stopped
    networks:
      - traefik-proxy

  # InvenTree web server service
  # Uses gunicorn as the web server
  inventree-server:
    image: inventree/inventree:${INVENTREE_TAG:-stable}
    container_name: inventree-server
    expose:
      - 8000
    depends_on:
      - inventree-db
      - inventree-cache
    volumes:
      # Data volume must map to /home/inventree/data
      - ${INVENTREE_EXT_VOLUME}:/home/inventree/data:z
    restart: unless-stopped
    networks:
      - traefik-proxy

  # Background worker process handles long-running or periodic tasks
  inventree-worker:
    image: inventree/inventree:${INVENTREE_TAG:-stable}
    container_name: inventree-worker
    command: invoke worker
    depends_on:
      - inventree-server
    volumes:
      # Data volume must map to /home/inventree/data
      - ${INVENTREE_EXT_VOLUME}:/home/inventree/data:z
    restart: unless-stopped
    networks:
      - traefik-proxy

  inventree-proxy:
    container_name: inventree-proxy
    image: nginx:stable
    restart: always
    depends_on:
      - inventree-server
    ports:
      - ${INVENTREE_WEB_PORT:-80}:80
      # - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro,z
      - ${INVENTREE_EXT_VOLUME}:/var/www:z
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventree.rule=Host(`inventory.fs1.home`) && PathPrefix(`/`)"
      - "traefik.http.routers.inventree.entrypoints=websecure"
      - "traefik.http.services.inventree.loadbalancer.server.port=80"
      - "traefik.http.routers.inventree.service=inventree"
      - "traefik.http.routers.inventree.tls.certresolver=staging-web-acme"
